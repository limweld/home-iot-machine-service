<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
	<sub-flow name="getEmployeeControllerFlow">
		<json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
		<set-variable variableName="userval" value="#[payload.username]" doc:name="Variable"/>
		<choice doc:name="Choice">
			<when expression="#[(flowVars.userval == null) || (flowVars.userval == &quot;&quot;)]">
				<db:select config-ref="Postgres_Generic_Database_Configuration" doc:name="Database">
					<db:parameterized-query><![CDATA[select * from accounts]]></db:parameterized-query>
				</db:select>
				<custom-transformer mimeType="application/java" class="org.transform.api.EmployeeArrayRepository" doc:name="Transform"/> 
				<logger message="#[payload]" level="INFO" doc:name="Logger"/>
  			</when>
			<otherwise>
				<db:select config-ref="Postgres_Generic_Database_Configuration" doc:name="Database">
					<db:parameterized-query><![CDATA[select * from accounts where username like #["%"+payload.username+"%"]]]></db:parameterized-query>
				</db:select>
				<custom-transformer mimeType="application/java" class="org.transform.api.EmployeeArrayRepository" doc:name="Transform"/>
				<logger message="#[payload]" level="INFO" doc:name="Logger"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="addEmployeeControllerFlow">
		<json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
		<db:insert config-ref="Postgres_Generic_Database_Configuration" bulkMode="true" doc:name="Database">
			<db:parameterized-query><![CDATA[insert into accounts (username) values (#[payload.username])]]></db:parameterized-query>
		</db:insert>
		<custom-transformer mimeType="application/java" class="org.transform.api.EmployeeRepository" doc:name="Transform"/>
		<logger level="INFO" doc:name="Logger" message="Inserting accounts entries #[payload]"/>
	</sub-flow>
	<sub-flow name="updateEmployeeControllerFlow">
		<json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
		<db:update config-ref="Postgres_Generic_Database_Configuration" bulkMode="true" doc:name="Database">
			<db:parameterized-query><![CDATA[update accounts 
SET 
	password=#[payload.password],
	email=#[payload.email] 
WHERE 
	username=#[payload.username]]]></db:parameterized-query>
		</db:update>
		<custom-transformer mimeType="application/java" class="org.transform.api.EmployeeRepository" doc:name="Transform"/>
		<logger message="Updating accounts entries #[payload]" level="INFO" doc:name="Logger"/>
	</sub-flow>
	<sub-flow name="deleteEmployeeControllerFlow">
		<json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
		<db:delete config-ref="Postgres_Generic_Database_Configuration" bulkMode="true" doc:name="Database">
			<db:parameterized-query><![CDATA[delete from accounts where username=(#[payload.username])]]></db:parameterized-query>
		</db:delete>
		<custom-transformer mimeType="application/java" class="org.transform.api.EmployeeRepository" doc:name="Transform"/>
		<logger level="INFO" doc:name="Logger" message="Deleting accounts entries #[payload]"/>
	</sub-flow>
</mule>
